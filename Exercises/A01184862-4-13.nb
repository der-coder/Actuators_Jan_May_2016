(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    156004,       3424]
NotebookOptionsPosition[    150774,       3248]
NotebookOutlinePosition[    151138,       3264]
CellTagsIndexPosition[    151095,       3261]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Ejercicio 4.13", "Title",
 CellChangeTimes->{{3.669406762311058*^9, 3.6694067651609707`*^9}}],

Cell["Isaac Ayala A01184862", "Subtitle",
 CellChangeTimes->{{3.669406772735869*^9, 3.66940677603448*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
11hHrCigYw7qgL+ecnc5ixYP8rFF4wdBZkKLFpskVhbhIJcttDGLME1RT2wC
ocr6Pqo9NemZbc7gmnbA6JpsMTNy6k+5Qk/Biix76OcnwWhbc4tpMeRAJcOo
hXA2+Bc2jik5qsN6khoKlYVR00DbhgRmWTWEkum3p6AZrZ8MrNujr3w6Jjf0
eRr9eVsFhHjf+jrwa6AhwNHCJrr3vK1D1pDiwF2rmCprxLCwBqePpmzRFMai
4dtEjZHSiPA1BbVFc/f2GXk+Iix7OF1emVOso34vxq/3lgXrwCsohVTeZdZx
Oa5SmO9kHZdohx07qtY6tmg1RShVC8HQiTmLpg1iSAxT2fm4i5C3KzkzHTff
6U9aKBu55oEycYE3S/Y0gFsCuaEv94JQW+z+u0BqLdE6lvXYr2bhnE2/UuCn
wuMol5WrVy5N5YMoCKcLrkyjzUeqNu7q7M8g35IVCWni/qlrZsxngvpGY41O
Ob11/1Qdo4ayrnkLUAuOD8o6nlL3eCjlDxZP7Rgfj9C2SjiEKRCuYHoWhMKM
txLhCZqP9QxAj3+nfeFH8nbjCmFJxioryXkjiM3kXYqQDB0PU2WdwAc98Z2X
ls7YnUkYvIK7aiipcAvmjZoejUDSL+ejKeWV89HmPOsIalF/4uNOWrQa0BaY
R1ZwOrDohQe/6My5UBB9mXhCm5tvJ10AvYJuExqfRChTsmVyjkPs0V/z0e6i
2pj+Lh/trgcauwxJFxIPUUdjbSg4rfBWlu3jAt4sM4acPqDKGkGZtktEKhtt
PhLRXBmC17C8SxTtHFPWjlaAuUn23vjKNWfZuPxc0ccOycV+8b1x4lVIDIxO
+JSDJQHmOK/kkj/zE149XEQRXGCJlgGFgvToitO2/arQgWltkYz9H1162cg6
Lo2DJQXNhYqwt9OJBiBDyT83IFsYR84K8C8zn4QmUqOvhKS+y2iiwgNFYrMD
C4Gqm38dQGub/lkYz81P8YAZlKQdL1s0nbmhzc38x+Rc/x3twrTwXtz1qir7
ytu1augSeOO0q6hFyxn06bgK97JFmyLOH8uD45R8nQ1O27zGonHpURKFXaLr
3t+WfS3BhbH0QTTn+p6R5+NC5XI1LJb74HZ4mfDr1y+zRUhlbCBSooaEiQqA
Uh8YqLHNB2ApJPpIvJCZQRqcM3bb12GWObGviH8jN9W8Y0zHpbasbI5BwsJO
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
o89JzQ6SSoKSvqpF0nb4ygFNowx4InSTFN6GdK2yjjhOaqvKcEIwaXw3SYzC
es7QXyfHtnqJq0O0HBOe8hJrR9Z2duzFkZb8qWrROoX1csCBNfeDueJafr2F
5fhWvEX7+dJMTJcrMIkwpIbAX4I8s8VUeYh3RmATMK40B8zkWRNw+Bry+6oV
KYEvj2tJ5KGBFp4IzUfg1SKugNm9NeVlLgO3ejsm6oKbUPUWQTOqht4dHjuk
hkzjSnn2nS4PImzhEauDyWVouqjfAz/RoaYrR/IBxc6zjnmUfL5Of30964ik
5OpLtlhH4+a/NfYp8LswoYX9DuFyBbwANwq+yUAf7fcOyFjhjMd9sip1+XFk
d+E66kgyuMI4iWvZD60TvsKEWTjCU2CMlpIFGyFM1CffPDiiATaLZAXFfIaW
dJFcomgd5f97AwKE8OuZyBDIOIuWtMpm/CLhcgUmEYbUEPhLwM83/3vD1ep8
Fcb6aBeic2No+BOTaSZJuWXybNJ78p+6aCtNxEiS6H0NETEluWqA2sKYRjB/
IBAIvAiEfwT9dR4mMiQQGIIJfcbvEC5XYDbhcgUmES5XYAZhPy7Mn0Gly4XL
FZhEGFJDIBAIfAyMug+SMBAIBAKBQMDg/wF664Sk
    "], {{0, 480}, {582, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{582, 480},
  PlotRange->{{0, 582}, {0, 480}}]], "Input"],

Cell[CellGroupData[{

Cell["Datos", "Chapter",
 CellChangeTimes->{{3.669406783338957*^9, 3.6694067838089*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataMotor1800rpm", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.125", ",", "33.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25", ",", "67"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "134"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.625", ",", "160"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.75", ",", "175"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.875", ",", "190"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "200"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.25", ",", "214"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.5", ",", "223"}], "}"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6694071007112217`*^9, 3.669407197772888*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Pnom", "=", 
   RowBox[{"20", "*", 
    SuperscriptBox["10", "3"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vt", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nm", "=", "1800"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ra", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rfw", "=", "150"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RfcMin", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Rfmin", "=", 
    RowBox[{"Rfw", "+", "RfcMin"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IfFullLoad", "=", "1.25"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rsr", "=", "0.04"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nf", "=", "1200"}], ";"}]}], "Input",
 CellChangeTimes->{{3.669407214244192*^9, 3.669407278600306*^9}, {
  3.669407459687388*^9, 3.669407490769959*^9}, {3.6694075894567347`*^9, 
  3.669407642188505*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"VtRfmin", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dataMotor1800rpm", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"Rfmin", "*", 
        RowBox[{"dataMotor1800rpm", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "dataMotor1800rpm", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.669407494893697*^9, 3.66940753903773*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["F\[OAcute]rmulas", "Chapter",
 CellChangeTimes->{{3.66940728972206*^9, 3.66940729121953*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ifMag", "=", 
   RowBox[{"ifEle", "-", "ifAR", "+", 
    RowBox[{"Nsr", "*", 
     RowBox[{"IaNom", "/", "Nf"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6694268136595287`*^9, 3.669426849290948*^9}}],

Cell["Obtenci\[OAcute]n de la ecuaci\[OAcute]n para Ea", "Item",
 CellChangeTimes->{{3.669407661041304*^9, 3.6694076661902237`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "j_", "]"}], ":=", 
   RowBox[{"dataMotor1800rpm", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "j_", "]"}], ":=", 
   RowBox[{"dataMotor1800rpm", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"j", "+", "1"}], ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", "j_", "]"}], ":=", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"j", "+", "1"}], "]"}], "-", 
    RowBox[{"x", "[", "j", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6693070644476957`*^9, 3.6693071094284487`*^9}, {
  3.669407762501466*^9, 3.669407766827821*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrix2", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "j"}], ",", 
       RowBox[{"h", "[", 
        RowBox[{"i", "-", "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"i", "\[Equal]", 
        RowBox[{"j", "-", "1"}]}], ",", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h", "[", 
           RowBox[{"i", "-", "1"}], "]"}], "+", 
          RowBox[{"h", "[", "i", "]"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"i", "\[Equal]", 
        RowBox[{"j", "-", "2"}]}], ",", 
       RowBox[{"h", "[", "i", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"i", "\[NotEqual]", " ", "j"}], "||", 
        RowBox[{"i", "\[NotEqual]", 
         RowBox[{"j", "-", "1"}]}], "||", 
        RowBox[{"i", "\[NotEqual]", 
         RowBox[{"j", "-", "2"}]}]}], ",", "0"}], "\[IndentingNewLine]", 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"Length", "[", "dataMotor1800rpm", "]"}], "-", "2"}]}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"Length", "[", "dataMotor1800rpm", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.669307167879344*^9, 3.669307173382215*^9}, {
  3.669407807967057*^9, 3.669407812881484*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["3", 
        RowBox[{"h", "[", "j", "]"}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"j", "+", "1"}], "]"}], "-", 
         RowBox[{"a", "[", "j", "]"}]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["3", 
        RowBox[{"h", "[", 
         RowBox[{"j", "-", "1"}], "]"}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", "[", "j", "]"}], "-", 
         RowBox[{"a", "[", 
          RowBox[{"j", "-", "1"}], "]"}]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{
        RowBox[{"Length", "[", "dataMotor1800rpm", "]"}], "-", "2"}]}], 
      "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6693071988467216`*^9, 3.669307203618527*^9}, {
  3.669407817250757*^9, 3.6694078179346743`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"LinearSolve", "[", 
    RowBox[{"matrix2", ",", "res"}], "]"}]}], " ", ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"c", "[", "j_", "]"}], ":=", 
   RowBox[{
    RowBox[{"LinearSolve", "[", 
     RowBox[{"matrix2", ",", "res"}], "]"}], " ", "[", 
    RowBox[{"[", 
     RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", "j_", "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"3", 
      RowBox[{"h", "[", "j", "]"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", "[", 
       RowBox[{"j", "+", "1"}], "]"}], "-", 
      RowBox[{"c", "[", "j", "]"}]}], ")"}]}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"b", "[", "j_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"h", "[", "j", "]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", "[", 
        RowBox[{"j", "+", "1"}], "]"}], "-", 
       RowBox[{"a", "[", "j", "]"}]}], ")"}]}], "-", 
    RowBox[{
     FractionBox[
      RowBox[{"h", "[", "j", "]"}], "3"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", 
        RowBox[{"c", "[", "j", "]"}]}], "+", 
       RowBox[{"c", "[", 
        RowBox[{"j", "+", "1"}], "]"}]}], ")"}]}]}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "i", "]"}], "+", 
      RowBox[{
       RowBox[{"b", "[", "i", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"y", "-", 
         RowBox[{"x", "[", "i", "]"}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"c", "[", "i", "]"}], "*", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", 
          RowBox[{"x", "[", "i", "]"}]}], ")"}], "2"]}], "+", 
      RowBox[{
       RowBox[{"d", "[", "i", "]"}], "*", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", 
          RowBox[{"x", "[", "i", "]"}]}], ")"}], "3"]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x", "[", "i", "]"}], "\[LessEqual]", "y", "\[LessEqual]", 
      RowBox[{"x", "[", 
       RowBox[{"i", "+", "1"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", 
     RowBox[{
      RowBox[{"Length", "[", "dataMotor1800rpm", "]"}], "-", "2"}]}], "}"}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.669307274079797*^9, 3.669307274704908*^9}, {
  3.6694078421003227`*^9, 3.669407842935628*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"5", "+", 
      RowBox[{"213.94591425659797`", " ", "y"}], "+", 
      RowBox[{"57.68265044979452`", " ", 
       SuperscriptBox["y", "2"]}], "+", 
      RowBox[{"438.0002839793742`", " ", 
       SuperscriptBox["y", "3"]}]}], ",", 
     RowBox[{"0", "\[LessEqual]", "y", "\[LessEqual]", "0.125`"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"33.5`", "\[VeryThinSpace]", "+", 
      RowBox[{"248.89784018057978`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.125`"}], "+", "y"}], ")"}]}], "+", 
      RowBox[{"221.93275694205985`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.125`"}], "+", "y"}], ")"}], "2"]}], "-", 
      RowBox[{"552.923827093585`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.125`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
     RowBox[{"0.125`", "\[LessEqual]", "y", "\[LessEqual]", "0.25`"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"67", "+", 
      RowBox[{"278.462725021083`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.25`"}], "+", "y"}], ")"}]}], "+", 
      RowBox[{"14.586321781965466`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.25`"}], "+", "y"}], ")"}], "2"]}], "-", 
      RowBox[{"225.74888746518906`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.25`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
     RowBox[{"0.25`", "\[LessEqual]", "y", "\[LessEqual]", "0.5`"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"134", "+", 
      RowBox[{"243.42796951234277`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.5`"}], "+", "y"}], ")"}]}], "-", 
      RowBox[{"154.72534381692634`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.5`"}], "+", "y"}], ")"}], "2"]}], "-", 
      RowBox[{"1029.5872982545266`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.5`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
     RowBox[{"0.5`", "\[LessEqual]", "y", "\[LessEqual]", "0.625`"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"160", "+", 
      RowBox[{"156.48472895243026`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.625`"}], "+", "y"}], ")"}]}], "-", 
      RowBox[{"540.8205806623738`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.625`"}], "+", "y"}], ")"}], "2"]}], "+", 
      RowBox[{"1991.541992343453`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.625`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
     RowBox[{"0.625`", "\[LessEqual]", "y", "\[LessEqual]", "0.75`"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"175", "+", 
      RowBox[{"114.6331146779362`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.75`"}], "+", "y"}], ")"}]}], "+", 
      RowBox[{"206.0076664664211`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.75`"}], "+", "y"}], ")"}], "2"]}], "-", 
      RowBox[{"1304.5806711192859`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.75`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
     RowBox[{"0.75`", "\[LessEqual]", "y", "\[LessEqual]", "0.875`"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"190", "+", 
      RowBox[{"104.98281233582502`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.875`"}], "+", "y"}], ")"}]}], "-", 
      RowBox[{"283.21008520331117`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.875`"}], "+", "y"}], ")"}], "2"]}], "+", 
      RowBox[{"666.7806921336879`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.875`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
     RowBox[{"0.875`", "\[LessEqual]", "y", "\[LessEqual]", "1"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"200", "+", 
      RowBox[{"65.43563597876388`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "y"}], ")"}]}], "-", 
      RowBox[{"33.16732565317819`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "y"}], ")"}], "2"]}], "-", 
      RowBox[{"18.300873047509278`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "y"}], ")"}], "3"]}]}], ",", 
     RowBox[{"1", "\[LessEqual]", "y", "\[LessEqual]", "1.25`"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"214", "+", 
      RowBox[{"45.42055945576674`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.25`"}], "+", "y"}], ")"}]}], "-", 
      RowBox[{"46.89298043881015`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.25`"}], "+", "y"}], ")"}], "2"]}], "+", 
      RowBox[{"36.8429704629727`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.25`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
     RowBox[{"1.25`", "\[LessEqual]", "y", "\[LessEqual]", "1.5`"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.669407843234178*^9, 3.669412956444771*^9, 
  3.66942040824368*^9, 3.6694224246209383`*^9, 3.6694227045891457`*^9, 
  3.669423841358087*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Ea", "[", "y_", "]"}], ":=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"5", "+", 
         RowBox[{"213.94591425659797`", " ", "y"}], "+", 
         RowBox[{"57.68265044979452`", " ", 
          SuperscriptBox["y", "2"]}], "+", 
         RowBox[{"438.0002839793742`", " ", 
          SuperscriptBox["y", "3"]}]}], ",", 
        RowBox[{"0", "\[LessEqual]", "y", "\[LessEqual]", "0.125`"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"33.5`", "\[VeryThinSpace]", "+", 
         RowBox[{"248.89784018057978`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.125`"}], "+", "y"}], ")"}]}], "+", 
         RowBox[{"221.93275694205985`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.125`"}], "+", "y"}], ")"}], "2"]}], "-", 
         RowBox[{"552.923827093585`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.125`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
        RowBox[{"0.125`", "\[LessEqual]", "y", "\[LessEqual]", "0.25`"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"67", "+", 
         RowBox[{"278.462725021083`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.25`"}], "+", "y"}], ")"}]}], "+", 
         RowBox[{"14.586321781965466`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.25`"}], "+", "y"}], ")"}], "2"]}], "-", 
         RowBox[{"225.74888746518906`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.25`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
        RowBox[{"0.25`", "\[LessEqual]", "y", "\[LessEqual]", "0.5`"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"134", "+", 
         RowBox[{"243.42796951234277`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.5`"}], "+", "y"}], ")"}]}], "-", 
         RowBox[{"154.72534381692634`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.5`"}], "+", "y"}], ")"}], "2"]}], "-", 
         RowBox[{"1029.5872982545266`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.5`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
        RowBox[{"0.5`", "\[LessEqual]", "y", "\[LessEqual]", "0.625`"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"160", "+", 
         RowBox[{"156.48472895243026`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.625`"}], "+", "y"}], ")"}]}], "-", 
         RowBox[{"540.8205806623738`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.625`"}], "+", "y"}], ")"}], "2"]}], "+", 
         RowBox[{"1991.541992343453`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.625`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
        RowBox[{"0.625`", "\[LessEqual]", "y", "\[LessEqual]", "0.75`"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"175", "+", 
         RowBox[{"114.6331146779362`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.75`"}], "+", "y"}], ")"}]}], "+", 
         RowBox[{"206.0076664664211`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.75`"}], "+", "y"}], ")"}], "2"]}], "-", 
         RowBox[{"1304.5806711192859`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.75`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
        RowBox[{"0.75`", "\[LessEqual]", "y", "\[LessEqual]", "0.875`"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"190", "+", 
         RowBox[{"104.98281233582502`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.875`"}], "+", "y"}], ")"}]}], "-", 
         RowBox[{"283.21008520331117`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.875`"}], "+", "y"}], ")"}], "2"]}], "+", 
         RowBox[{"666.7806921336879`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.875`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
        RowBox[{"0.875`", "\[LessEqual]", "y", "\[LessEqual]", "1"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"200", "+", 
         RowBox[{"65.43563597876388`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "y"}], ")"}]}], "-", 
         RowBox[{"33.16732565317819`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "y"}], ")"}], "2"]}], "-", 
         RowBox[{"18.300873047509278`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "y"}], ")"}], "3"]}]}], ",", 
        RowBox[{"1", "\[LessEqual]", "y", "\[LessEqual]", "1.25`"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"214", "+", 
         RowBox[{"45.42055945576674`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1.25`"}], "+", "y"}], ")"}]}], "-", 
         RowBox[{"46.89298043881015`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.25`"}], "+", "y"}], ")"}], "2"]}], "+", 
         RowBox[{"36.8429704629727`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.25`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
        RowBox[{"1.25`", "\[LessEqual]", "y", "\[LessEqual]", "1.5`"}]}], 
       "}"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.669407848607729*^9, 3.6694078644679813`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Desarrollo", "Chapter",
 CellChangeTimes->{{3.669406785224414*^9, 3.6694067866002073`*^9}}],

Cell[CellGroupData[{

Cell["1.", "Subchapter",
 CellChangeTimes->{{3.6694067941129503`*^9, 3.66940679428906*^9}}],

Cell["(a)", "Item",
 CellChangeTimes->{{3.669406938297566*^9, 3.66940694550488*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dataMotor1800rpm", ",", "VtRfmin"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<motor\>\"", ",", "\"\<Rf 100\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.669407424268118*^9, 3.669407442718855*^9}, {
  3.669407542425454*^9, 3.669407546796109*^9}, {3.669408845470088*^9, 
  3.6694088627503023`*^9}, {3.669408952884025*^9, 3.66940897708706*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 5.}, {0.125, 33.5}, {0.25, 67.}, {0.5, 134.}, {0.625, 
         160.}, {0.75, 175.}, {0.875, 190.}, {1., 200.}, {1.25, 214.}, {1.5, 
         223.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.125, 18.75}, {0.25, 37.5}, {0.5, 75.}, {0.625, 
         93.75}, {0.75, 112.5}, {0.875, 131.25}, {1., 150.}, {1.25, 187.5}, {
         1.5, 225.}}]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.5}, {0, 225.}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotRange -> {{0, 1.5}, {0, 225.}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"motor\"", "\"Rf 100\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.669407426328821*^9, 3.66940744323914*^9}, 
   3.669407547135683*^9, {3.669408959286972*^9, 3.6694089775979*^9}, 
   3.6694129668568497`*^9, 3.6694224251686363`*^9, 3.669422704859583*^9, 
   3.669423841739814*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Ea", "[", "y", "]"}], "-", 
     RowBox[{"Rfmin", "*", "y"}]}], "\[Equal]", "0"}], ",", "y"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6694078805244007`*^9, 3.669407898028597*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", "1.4834421812371472`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.669407898896078*^9, 3.669407931667139*^9, 
  3.66941296924188*^9, 3.669422425452745*^9, 3.6694227050038567`*^9, 
  3.669423841840138*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Emax", "=", 
  RowBox[{
   RowBox[{"Ea", "[", "y", "]"}], "/.", 
   RowBox[{"y", "->", "1.4834421812371472`"}]}]}]], "Input",
 CellChangeTimes->{{3.669407995625146*^9, 3.669408059871002*^9}}],

Cell[BoxData["222.51632718557207`"], "Output",
 CellChangeTimes->{3.6694080600996*^9, 3.669412973707088*^9, 
  3.669420416583577*^9, 3.6694224257566023`*^9, 3.6694227050451*^9, 
  3.669423841874199*^9}]
}, Open  ]],

Cell["(b)", "Item",
 CellChangeTimes->{{3.669406938297566*^9, 3.669406947499715*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"iaNom", "=", 
  RowBox[{"Pnom", "/", "Vt", " "}]}]], "Input",
 CellChangeTimes->{{3.669408304148802*^9, 3.669408324779422*^9}, {
  3.669408380208243*^9, 3.669408456256383*^9}}],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{3.669408456695562*^9, 3.669412976406001*^9, 
  3.6694204179461308`*^9, 3.669422425850544*^9, 3.6694227050813093`*^9, 
  3.669423841904043*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rfb", "=", 
  RowBox[{"Vt", "/", "IfFullLoad", " "}]}]], "Input"],

Cell[BoxData["160.`"], "Output",
 CellChangeTimes->{3.669408458455709*^9, 3.669412978382494*^9, 
  3.6694204194370403`*^9, 3.66942242591448*^9, 3.669422705118127*^9, 
  3.6694238419323597`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rfcb", "=", 
  RowBox[{"Rfb", "-", "Rfw", " "}]}]], "Input"],

Cell[BoxData["10.`"], "Output",
 CellChangeTimes->{
  3.669408327303195*^9, {3.6694083866160583`*^9, 3.669408460370203*^9}, 
   3.6694129803707533`*^9, 3.669420420993808*^9, 3.669422425954093*^9, 
   3.669422705155211*^9, 3.669423841960693*^9}]
}, Open  ]],

Cell["(c)", "Item",
 CellChangeTimes->{{3.669406938297566*^9, 3.669406949326456*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eac", "=", 
  RowBox[{"Vt", "+", 
   RowBox[{"iaNom", "*", "Ra"}]}]}]], "Input",
 CellChangeTimes->{{3.669408481157875*^9, 3.669408494388*^9}}],

Cell[BoxData["210.`"], "Output",
 CellChangeTimes->{3.669408495625627*^9, 3.669412982371771*^9, 
  3.669420422470703*^9, 3.669422426045753*^9, 3.669422705191169*^9, 
  3.669423841989043*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PFullLoad", "=", 
  RowBox[{"Eac", "*", "iaNom"}]}]], "Input",
 CellChangeTimes->{{3.669408500118629*^9, 3.669408518979137*^9}}],

Cell[BoxData["21000.`"], "Output",
 CellChangeTimes->{{3.669408515751073*^9, 3.669408519289813*^9}, 
   3.669412984425664*^9, 3.669420425079431*^9, 3.6694224261387463`*^9, 
   3.669422705228631*^9, 3.6694238420174847`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Omega]mFullLoad", "=", 
  RowBox[{"nm", "*", 
   RowBox[{"Pi", "/", "30"}]}]}]], "Input",
 CellChangeTimes->{{3.669408526697921*^9, 3.669408542331451*^9}}],

Cell[BoxData[
 RowBox[{"60", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.669408543083891*^9, 3.66941298635397*^9, 
  3.669420426528105*^9, 3.669422426232917*^9, 3.669422705264686*^9, 
  3.6694238420458527`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalGamma]FullLoad", "=", 
  RowBox[{"PFullLoad", "/", "\[Omega]mFullLoad"}]}]], "Input",
 CellChangeTimes->{{3.66940855458018*^9, 3.669408568115193*^9}}],

Cell[BoxData["111.40846016432674`"], "Output",
 CellChangeTimes->{3.6694085686213913`*^9, 3.669412988901196*^9, 
  3.669420427998433*^9, 3.6694224263268843`*^9, 3.669422705271459*^9, 
  3.669423842074284*^9}]
}, Open  ]],

Cell["(d)", "Item",
 CellChangeTimes->{{3.669406938297566*^9, 3.6694069508958273`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"VtRf160", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dataMotor1800rpm", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"Rfb", "*", 
        RowBox[{"dataMotor1800rpm", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "dataMotor1800rpm", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.669407494893697*^9, 3.66940753903773*^9}, {
  3.6694088106510477`*^9, 3.669408817237831*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot1", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dataMotor1800rpm", ",", "VtRf160"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<motor\>\"", ",", "\"\<Rf 160\>\""}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.669407424268118*^9, 3.669407442718855*^9}, {
  3.669407542425454*^9, 3.669407546796109*^9}, {3.6694088327252073`*^9, 
  3.669408834078808*^9}, {3.669408994061676*^9, 3.6694090082383213`*^9}, {
  3.669420626085752*^9, 3.669420627562764*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 5.}, {0.125, 33.5}, {0.25, 67.}, {0.5, 134.}, {0.625, 
         160.}, {0.75, 175.}, {0.875, 190.}, {1., 200.}, {1.25, 214.}, {1.5, 
         223.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.125, 20.}, {0.25, 40.}, {0.5, 80.}, {0.625, 
         100.}, {0.75, 120.}, {0.875, 140.}, {1., 160.}, {1.25, 200.}, {1.5, 
         240.}}]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.5}, {0, 240.}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotRange -> {{0, 1.5}, {0, 240.}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"motor\"", "\"Rf 160\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6694088344593153`*^9, 3.6694090088033323`*^9, 
  3.669412992623103*^9, 3.669420628047592*^9, 3.669422426636241*^9, 
  3.669422705614958*^9, 3.669423842181126*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalDelta]V", "=", 
  RowBox[{"Eac", "-", "Vt"}]}]], "Input",
 CellChangeTimes->{{3.669409421910376*^9, 3.66940947667598*^9}}],

Cell[BoxData["10.`"], "Output",
 CellChangeTimes->{{3.669409447843917*^9, 3.669409477028985*^9}, 
   3.6694129947790413`*^9, 3.669420433291045*^9, 3.669422426869235*^9, 
   3.669422705674214*^9, 3.669423842467815*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"Ea", "[", "y", "]"}], "\[Equal]", "Eac"}], "]"}]], "Input",
 CellChangeTimes->{{3.669409523364127*^9, 3.6694095320769453`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", "1.168563446773787`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6694095325657597`*^9, 3.6694129968282223`*^9, 
  3.669420435114807*^9, 3.669422427021514*^9, 3.66942270574953*^9, 
  3.6694238425348253`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IfAr", "=", 
  RowBox[{
   RowBox[{"IfFullLoad", "-", "ia"}], "/.", 
   RowBox[{"ia", "->", "1.168563446773787`"}]}]}]], "Input",
 CellChangeTimes->{{3.669409542233798*^9, 3.669409575237451*^9}}],

Cell[BoxData["0.0814365532262129`"], "Output",
 CellChangeTimes->{3.669409575690131*^9, 3.669412998601156*^9, 
  3.669420436757853*^9, 3.669422427255418*^9, 3.669422705793488*^9, 
  3.6694238425650997`*^9}]
}, Open  ]],

Cell["(e)", "Item",
 CellChangeTimes->{{3.669406938297566*^9, 3.669406953191051*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vte", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dataMotor1800rpm", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"160", "*", 
         RowBox[{"dataMotor1800rpm", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "+", "60"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "dataMotor1800rpm", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.669422674121035*^9, 3.6694226953508253`*^9}, {
  3.669422882986415*^9, 3.669422905106389*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"{", 
   RowBox[{"Vte", ",", "dataMotor1800rpm", ",", "VtRf160"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6694227321184387`*^9, 3.669422762907198*^9}, {
  3.6694245274095297`*^9, 3.669424589548456*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{0., 60.}, {0.125, 80.}, {0.25, 100.}, {0.5, 140.}, {0.625, 
      160.}, {0.75, 180.}, {0.875, 200.}, {1., 220.}, {1.25, 260.}, {1.5, 
      300.}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{0., 5.}, {0.125, 33.5}, {0.25, 67.}, {0.5, 134.}, {0.625, 
      160.}, {0.75, 175.}, {0.875, 190.}, {1., 200.}, {1.25, 214.}, {1.5, 
      223.}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{0., 0.}, {0.125, 20.}, {0.25, 40.}, {0.5, 80.}, {0.625, 
      100.}, {0.75, 120.}, {0.875, 140.}, {1., 160.}, {1.25, 200.}, {1.5, 
      240.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{412., Automatic},
  Method->{},
  PlotRange->{{0, 1.5}, {0, 300.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.669424559331346*^9, 3.669424590241248*^9}}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{0., 60.}, {0.125, 80.}, {0.25, 100.}, {0.5, 140.}, {0.625, 
      160.}, {0.75, 180.}, {0.875, 200.}, {1., 220.}, {1.25, 260.}, {1.5, 
      300.}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{0., 5.}, {0.125, 33.5}, {0.25, 67.}, {0.5, 134.}, {0.625, 
      160.}, {0.75, 175.}, {0.875, 190.}, {1., 200.}, {1.25, 214.}, {1.5, 
      223.}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{0., 0.}, {0.125, 20.}, {0.25, 40.}, {0.5, 80.}, {0.625, 
      100.}, {0.75, 120.}, {0.875, 140.}, {1., 160.}, {1.25, 200.}, {1.5, 
      240.}}]}}, 
   LineBox[{{0.03145057763944764, 160.5099282255943}, {1.5371469817414283`, 
    171.01585928590475`}}], 
   LineBox[{{1.3484435175176446`, -28.59683065837112}, {1.3602374841294094`, 
    286.58110115094155`}}], 
   LineBox[{{-0.007862642835314348, 219.60579064146256`}, {
    1.6275673939960797`, 224.85875617161778`}}], 
   LineBox[{{0.8295089865999907, -20.717382363138256`}, {0.8452342754156772, 
    311.53268741917884`}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{13.05102, 1.5}, {13.08726, 0.5}},
  ImageSize->{412., Automatic},
  Method->{},
  PlotRange->{{-0.03125, 1.53125}, {-6.451612903225808, 316.1290322580645}},
  PlotRangeClipping->True,
  PlotRangePadding->Automatic,
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{3.669424293310809*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Ea", "[", "y", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"160", "y"}], "+", "60"}]}], ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.669422929001554*^9, 3.669422956785186*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"-", "0.375`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "0.6184176310937283`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "0.6249999999999836`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.669422957419817*^9, 3.669423842691524*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Ea", "[", "y", "]"}], "/.", 
  RowBox[{"y", "\[Rule]", "0.625"}]}]], "Input",
 CellChangeTimes->{{3.669422979174843*^9, 3.669422990841299*^9}}],

Cell[BoxData["160.`"], "Output",
 CellChangeTimes->{{3.669422985753149*^9, 3.669422991203547*^9}, 
   3.669423842736415*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Ea", "[", "0.625", "]"}], "\[Equal]", 
    RowBox[{"160", "y"}]}], ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.6694239138764277`*^9, 3.669423919679675*^9}, {
  3.669424169379129*^9, 3.66942418874209*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", "1.`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.669423920394918*^9, 3.669424189400691*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalDelta]V2", "=", 
  RowBox[{"Max", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"160", "-", 
      RowBox[{"160", "i"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0.85", ",", "0.9", ",", "0.01"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6694249154316587`*^9, 3.669424939223794*^9}, {
  3.669424992905695*^9, 3.669425044907152*^9}, {3.669425528932363*^9, 
  3.669425535043025*^9}}],

Cell[BoxData["24.`"], "Output",
 CellChangeTimes->{{3.669424934222045*^9, 3.669424939954507*^9}, {
   3.669425002250173*^9, 3.669425045479238*^9}, 3.669425535943665*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IaMax", "=", 
  RowBox[{"\[CapitalDelta]V2", "/", "Ra"}]}]], "Input",
 CellChangeTimes->{{3.6694255402402782`*^9, 3.6694255517840137`*^9}}],

Cell[BoxData["240.`"], "Output",
 CellChangeTimes->{3.66942555232239*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2.", "Subchapter",
 CellChangeTimes->{{3.6694069129488573`*^9, 3.6694069152557707`*^9}}],

Cell["(a)", "Item",
 CellChangeTimes->{
  3.669406960282213*^9, {3.669407007227167*^9, 3.669407008154434*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"img", "=", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
     "], {{0, 197}, {275, 0}}, {0, 
     255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{275, 197},
   PlotRange->{{0, 275}, {0, 197}}]}]], "Input",
 CellChangeTimes->{{3.669427719697012*^9, 3.6694277248603783`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 197}, {275, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{275, 197},
  PlotRange->{{0, 275}, {0, 197}}]], "Output",
 CellChangeTimes->{3.669427725188572*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "\"\<Donde\>\"", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Vt\>\"", ",", "Vt"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Rsr\>\"", ",", "Rsr"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Ra\>\"", ",", "Ra"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Rfw\>\"", ",", "Rfw"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.669426177849341*^9, 3.6694261938750153`*^9}, {
  3.669426238456809*^9, 3.669426335873991*^9}, {3.669426973645505*^9, 
  3.6694270021973677`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Donde\"\>", ""},
    {"\<\"Vt\"\>", "200"},
    {"\<\"Rsr\"\>", "0.04`"},
    {"\<\"Ra\"\>", "0.1`"},
    {"\<\"Rfw\"\>", "150"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.669426306636772*^9, 3.669426336871388*^9, {3.669426982883953*^9, 
   3.669427002869931*^9}}]
}, Open  ]],

Cell["(b)", "Item",
 CellChangeTimes->{
  3.669406960282213*^9, {3.669407007227167*^9, 3.6694070095599117`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ea2b", "=", 
  RowBox[{"Vt", "+", 
   RowBox[{"iaNom", 
    RowBox[{"(", 
     RowBox[{"Ra", "+", "Rsr"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6694264002945757`*^9, 3.669426433472732*^9}}],

Cell[BoxData["214.`"], "Output",
 CellChangeTimes->{3.669426433934845*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Ea", "[", "y", "]"}], "\[Equal]", "Ea2b"}], ",", "y"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"*", " ", "Obtener", " ", "If", " ", "mag"}], " ", 
   "**)"}]}]], "Input",
 CellChangeTimes->{{3.669426452370798*^9, 3.669426486706314*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", "1.2499999999999998`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.669426463804208*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"IfMag", "=", "1.25"}], ";"}]], "Input",
 CellChangeTimes->{{3.669426489663472*^9, 3.6694264940064173`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Ea", "[", "y", "]"}], "\[Equal]", "Vt"}], ",", "y"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.669427263102859*^9, 3.669427272562249*^9}, {
  3.669427313956285*^9, 3.6694273236050997`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", "1.`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.669427324280369*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"IfElec", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.669427328434166*^9, 3.669427332658805*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"IfMag", "\[Equal]", 
    RowBox[{"IfElec", "-", "IfAr", "+", 
     RowBox[{"Nsr", "*", 
      RowBox[{"iaNom", "/", "Nf"}]}]}]}], ",", "Nsr"}], "]"}]], "Input",
 CellChangeTimes->{{3.66942733968521*^9, 3.6694273792402163`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"Nsr", "\[Rule]", "3.977238638714555`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.669427372512846*^9, 3.66942737964711*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"nSR", "=", "3.977238638714555`"}], ";"}]], "Input",
 CellChangeTimes->{{3.669427423479759*^9, 3.669427437474873*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6694264718522797`*^9, 3.669426472858069*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resultados", "Chapter",
 CellChangeTimes->{{3.669407331007641*^9, 3.669407332832156*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
HA==
    "], {{0, 42}, {508, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{508, 42},
  PlotRange->{{0, 508}, {0, 42}}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", "\[IndentingNewLine]", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\"\<1\>\"", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\"\<a)\>\"", ",", "\"\<Ea max\>\"", ",", "Emax"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\"\<b)\>\"", ",", "\"\<Rfc\>\"", ",", "Rfcb"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<c)\>\"", ",", "\"\<P\>\"", ",", "PFullLoad", ",", 
      "\"\<\[CapitalGamma]\>\"", ",", "\[CapitalGamma]FullLoad"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\"\<d)\>\"", ",", "\"\<If AR\>\"", ",", "IfAr"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\"\<e)\>\"", ",", "\"\<Ia max\>\"", ",", " ", "IaMax"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\"\<\>\"", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\"\<2\>\"", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\"\<a)\>\"", ",", "img", ",", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\"\<Donde\>\"", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Vt\>\"", ",", "Vt"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Rsr\>\"", ",", "Rsr"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Ra\>\"", ",", "Ra"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Rfw\>\"", ",", "Rfw"}], "}"}]}], "}"}], "]"}]}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\"\<b)\>\"", ",", "\"\<N sr\>\"", ",", "nSR"}], "}"}]}], 
   "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.669427440685667*^9, 3.669427512728121*^9}, {
  3.669427543039048*^9, 3.669427791988896*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"1\"\>", "", "", "", ""},
    {"\<\"a)\"\>", "\<\"Ea max\"\>", "222.51632718557207`", "", ""},
    {"\<\"b)\"\>", "\<\"Rfc\"\>", "10.`", "", ""},
    {"\<\"c)\"\>", "\<\"P\"\>", "21000.`", "\<\"\[CapitalGamma]\"\>", 
     "111.40846016432674`"},
    {"\<\"d)\"\>", "\<\"If AR\"\>", "0.0814365532262129`", "", ""},
    {"\<\"e)\"\>", "\<\"Ia max\"\>", "240.`", "", ""},
    {"\<\"\"\>", "", "", "", ""},
    {"\<\"2\"\>", "", "", "", ""},
    {"\<\"a)\"\>", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
        "], {{0, 197}, {275, 0}}, {0,
         255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      BaseStyle->"ImageGraphics",
      ImageSize->{279.5, Automatic},
      ImageSizeRaw->{275, 197},
      PlotRange->{{0, 275}, {0, 197}}], 
     TagBox[GridBox[{
        {"\<\"Donde\"\>", ""},
        {"\<\"Vt\"\>", "200"},
        {"\<\"Rsr\"\>", "0.04`"},
        {"\<\"Ra\"\>", "0.1`"},
        {"\<\"Rfw\"\>", "150"}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "", ""},
    {"\<\"b)\"\>", "\<\"N sr\"\>", "3.977238638714555`", "", ""}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.66942757323072*^9, 3.669427603298543*^9, {3.6694276340540133`*^9, 
   3.6694276959849653`*^9}, {3.6694277520138483`*^9, 3.6694277927467127`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{679, 709},
WindowMargins->{{Automatic, -4}, {Automatic, 0}},
FrontEndVersion->"10.3 for Linux x86 (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 99, 1, 96, "Title"],
Cell[682, 25, 106, 1, 54, "Subtitle"],
Cell[791, 28, 55914, 922, 426, "Input"],
Cell[CellGroupData[{
Cell[56730, 954, 88, 1, 69, "Chapter"],
Cell[56821, 957, 901, 26, 99, "Input"],
Cell[57725, 985, 1098, 32, 297, "Input"],
Cell[58826, 1019, 617, 18, 99, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59480, 1042, 99, 1, 69, "Chapter"],
Cell[59582, 1045, 238, 6, 32, "Input"],
Cell[59823, 1053, 132, 1, 31, "Item"],
Cell[59958, 1056, 777, 25, 77, "Input"],
Cell[60738, 1083, 1485, 38, 209, "Input"],
Cell[62226, 1123, 999, 30, 145, "Input"],
Cell[63228, 1155, 146, 4, 32, "Input"],
Cell[63377, 1161, 257, 8, 32, "Input"],
Cell[63637, 1171, 336, 12, 58, "Input"],
Cell[63976, 1185, 594, 21, 59, "Input"],
Cell[CellGroupData[{
Cell[64595, 1210, 1214, 36, 107, "Input"],
Cell[65812, 1248, 5647, 167, 395, "Output"]
}, Open  ]],
Cell[71474, 1418, 6156, 169, 665, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77667, 1592, 97, 1, 69, "Chapter"],
Cell[CellGroupData[{
Cell[77789, 1597, 91, 1, 64, "Subchapter"],
Cell[77883, 1600, 84, 1, 31, "Item"],
Cell[CellGroupData[{
Cell[77992, 1605, 488, 11, 55, "Input"],
Cell[78483, 1618, 11485, 237, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90005, 1860, 271, 8, 32, "Input"],
Cell[90279, 1870, 280, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90596, 1881, 215, 5, 32, "Input"],
Cell[90814, 1888, 202, 3, 32, "Output"]
}, Open  ]],
Cell[91031, 1894, 85, 1, 31, "Item"],
Cell[CellGroupData[{
Cell[91141, 1899, 200, 4, 32, "Input"],
Cell[91344, 1905, 192, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91573, 1913, 89, 2, 32, "Input"],
Cell[91665, 1917, 193, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91895, 1925, 84, 2, 32, "Input"],
Cell[91982, 1929, 244, 4, 32, "Output"]
}, Open  ]],
Cell[92241, 1936, 85, 1, 31, "Item"],
Cell[CellGroupData[{
Cell[92351, 1941, 167, 4, 32, "Input"],
Cell[92521, 1947, 190, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92748, 1955, 152, 3, 32, "Input"],
Cell[92903, 1960, 222, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93162, 1968, 181, 4, 32, "Input"],
Cell[93346, 1974, 214, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93597, 1983, 183, 3, 32, "Input"],
Cell[93783, 1988, 208, 3, 32, "Output"]
}, Open  ]],
Cell[94006, 1994, 87, 1, 31, "Item"],
Cell[94096, 1997, 666, 19, 99, "Input"],
Cell[CellGroupData[{
Cell[94787, 2020, 574, 13, 55, "Input"],
Cell[95364, 2035, 11426, 236, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106827, 2276, 155, 3, 32, "Input"],
Cell[106985, 2281, 217, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107239, 2289, 189, 4, 32, "Input"],
Cell[107431, 2295, 283, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107751, 2306, 219, 5, 32, "Input"],
Cell[107973, 2313, 206, 3, 32, "Output"]
}, Open  ]],
Cell[108194, 2319, 85, 1, 31, "Item"],
Cell[108282, 2322, 696, 20, 77, "Input"],
Cell[CellGroupData[{
Cell[109003, 2346, 267, 6, 32, "Input"],
Cell[109273, 2354, 1593, 38, 274, "Output"]
}, Open  ]],
Cell[110881, 2395, 2012, 43, 274, InheritFromParent],
Cell[CellGroupData[{
Cell[112918, 2442, 259, 7, 32, "Input"],
Cell[113180, 2451, 376, 11, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113593, 2467, 178, 4, 32, "Input"],
Cell[113774, 2473, 124, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113935, 2480, 286, 7, 32, "Input"],
Cell[114224, 2489, 169, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114430, 2498, 456, 12, 32, "Input"],
Cell[114889, 2512, 169, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115095, 2519, 163, 3, 32, "Input"],
Cell[115261, 2524, 73, 1, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[115383, 2531, 94, 1, 64, "Subchapter"],
Cell[115480, 2534, 110, 2, 31, "Item"],
Cell[CellGroupData[{
Cell[115615, 2540, 7766, 133, 66, "Input"],
Cell[123384, 2675, 7682, 131, 212, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131103, 2811, 587, 15, 55, "Input"],
Cell[131693, 2828, 413, 13, 92, "Output"]
}, Open  ]],
Cell[132121, 2844, 112, 2, 31, "Item"],
Cell[CellGroupData[{
Cell[132258, 2850, 221, 6, 32, "Input"],
Cell[132482, 2858, 74, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132593, 2864, 322, 9, 32, "Input"],
Cell[132918, 2875, 163, 4, 32, "Output"]
}, Open  ]],
Cell[133096, 2882, 142, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[133263, 2889, 265, 7, 32, "Input"],
Cell[133531, 2898, 147, 4, 32, "Output"]
}, Open  ]],
Cell[133693, 2905, 138, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[133856, 2912, 289, 7, 32, "Input"],
Cell[134148, 2921, 187, 4, 32, "Output"]
}, Open  ]],
Cell[134350, 2928, 152, 3, 32, "Input"],
Cell[134505, 2933, 94, 1, 32, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[134648, 2940, 95, 1, 69, "Chapter"],
Cell[134746, 2943, 5240, 91, 56, "Input"],
Cell[CellGroupData[{
Cell[140011, 3038, 1846, 43, 363, "Input"],
Cell[141860, 3083, 8874, 160, 367, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
