(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    248721,       4754]
NotebookOptionsPosition[    245786,       4658]
NotebookOutlinePosition[    246154,       4674]
CellTagsIndexPosition[    246111,       4671]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Ejercicio 4.9", "Title",
 CellChangeTimes->{{3.669294299258542*^9, 3.66929430261066*^9}, {
  3.669303313005723*^9, 3.669303316116284*^9}}],

Cell["Isaac Ayala A01184862", "Subtitle",
 CellChangeTimes->{{3.669294311084568*^9, 3.669294316162077*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
aLGdrf2u7HG6VvjQvMniRnbx+zlP2sb2gyT8gf2w+0Hy7MA6R0jzidHirUzr
Aiuy/nNwp9LnSY/zK4ru6g8k97njS5UyotYC9mA2ddxd1cmuKMo82YM/wB25
cSUPqsa2/QF04ZpLf0XR2jEfMI7xc4KrCMcQ0fjqcj+wHvYU9GyEOze3RnF3
4lzWJn9F6VbGGeb3+Z4mf8Dg0atskeC64rDJ0E5z3ffcTuc2ZsoaOm7+vU74
vQnHT9/f37eLoj9wuyhDvrU/vhl39rgryBj/7e2tUdDX11duISt+1dBfebyu
bY003tW+inCaIgvMQ8eKZqnRWq7FI9n9IHkwsP6N9Ge32HX7AxtWpb/+zH84
3RzEX70/YG73W7d29AiGsNfaH/DC14J9I7Ae9mH7A9cFltzCmha1ovA0XcBB
2va8AEPoKqLGaTdgLWlt9gEj/w+bRDZn7yqcR43Y2cPCx8wpvFBDR3K9wWSQ
q7J440Z7exA31/jEOHBM59u49NReb+5I8/tEGhaDtMP5QkN/osqy9D640fkD
vBhodLe0jLKFzryHifTiJG6cmvtN2rVTFO5rR/Py1yT3nqjKSS4i1OrgpTm1
CIHj/EIoIkSWVL/PSC+XZEVzEsfVSMVQzzRdRknJncLHeQCGCiRO/n2s3FR1
mt8A5SUzCJCspu+86Co1/YGaCprYp/FDfZJ2ay7CLub1P/l6T25SLrbew3T3
otfLR1GyuKNcN+aBmdY7zv2BIjCvo2rX7oZFNXVo4r2KbVG+W3nJDCnpAdYT
htoOfBoqtzKFP7AfJA8GltxlssldQa7+wChH2ye5KFC7cLHPmh5trl07uZ0K
vXtOxzTOszXndhSnnQORUZORTmAHdwcZRRWvwdWC9EI9YwFzty/GQD1UXRyI
FBjGZBOJZ4YOekrF8ELt/mper2YRWJo7bzqJt5VSp9F4lZjufXjhQe6ibQPz
wlm5Rk292DpNfuBxfilhEn+JKRWADwI8ytWKPj104TWC7Dis04Y/cHB3Iya5
uBYI0cbYZ0epa23tVJz3dbKdHORmbdYs7O/dLah/nC7vM/EtqgWrGHnRbbUs
zX6crrakH2JsqA7tMN2LzclO68u4u0f3xlCartLmeqHWDQ/TJaTa62tXFtJE
xmn3zZvlpuk6cojS5Ril6RPvFBWHNTxBg9Qx0+jYGELDH9gPkp34A5q46A8Y
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
B0z7v8UfSPPXkXxz7fQHfHUwAd1jXx379AeCLqLfv38PEj/DsBAQIkO4Njcf
JLzxK1uIrEsubAllIahPE2ApjdgSxYzOzr+RRWNUNB6Go4em14isQYLNGE3E
0Kae2C0IZDTdp/s+oWLIwhGfAzLVAcv3xOb5qDBG0J3c19Lwdy5LIb2/vyeJ
azqdDf6YL7/BwoT99vbGn1QLko4zi5RKUVgwl4akFmmQ0DsAU1G0+d/P1JBT
rB00J22c9yPTfrTLnKZvjeLvWq80pOFzKnboiJnU9s/Xl4wQk554dNotZm+g
VaW+vr40hlmHtfzEdA1tJ9qctLMUcTKZKV3bQ0YyzCM8EUfHlJ3t/ORip31w
shdVHAB9dRh/zP/k2VNp6DMdwdf16Ry16z+e2aN+kdZyLR7Jbli0eQ3K70ya
J3SVdbV+XdGf7n0WcxiN5/5J8flJfE4Qlj8KW5Ua52ffJi9L8Wfri1WZzl66
vtqjMqn1cfq8A4/h8hMOXEjM2mkXXTQRCtIETI9NAP0qILwgv04ZOtaJN7Jq
BKw+dNme3Mouib+a5htWXjgjvdWAKqGxZvcpTaxXklVhQ00eT6TSQm+of8Wu
AexSgxNAOk9nHglfetVWUZNcjPJNchDTDmE1L95SGkJW8DfX7EzMPjsI1eKN
21Vp6oJaY7NdW2CaFhRMfJCPSjGEEqPEof5BV2qB03C29qO8SU3SNb45PW9X
NBZoqMfD9IU3Zi+KSpfsD2iDx2EE+yyHC5RuwjXR8Kg4jQ/WbNNpKcntxiwa
QdndTrt7BmZOjTuBaTN4POxHlvWkwPTreeoPpLmnhATD2UtPst/IcezeOO8q
fLfA4AKNj/IH8AemvEbiRf9qLWCYQDWi9aKy+IbCpcDY5oudxfv8ZI/TRwC4
QGBezTjWP+B2nH9AIM1P4ijWuFgqalFNr0UqrapUKT7keSupmOAo32TQilAt
ju6DAyxUjeAhUalj/WsPi0YIf+B29iif/ekBpqdIm8DesOhnAWa+ppvkBBBP
sNrF31xhmfNBM2rdA+ddhe8WmMao7ArYbi0WwALYpelfQcf7sf3+QHs/8AHs
hkU/CzDjD2AzRxdWSMAlj+6RoiWk0v726uxdhe8WWJK91itiVndiogAWwPYM
7BQUFFShr6+v/sT4wtj9wAQFBQXdm9ZyLR7J7gdJAAtgAWzzogNYAAtgtwN7
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
9E/5j/8JWq1zGg==
    "], {{0, 235}, {688, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{688, 235},
  PlotRange->{{0, 688}, {0, 235}}]], "Input",
 CellChangeTimes->{{3.669303309839406*^9, 3.669303311368569*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztvT2vLEl2LRaQZOhHXEfu/ILjCAXJfwA1uqAl5z1AcoX7JEB4BhEgAQJy
DiBT4D84jiBLhkgivevJENAGPQJNYMjhsDWcHhLz0T0ZCtVCLq3cOyIyqyor
K+uc2Oi+OFEZHyt2fK3YuTPiP/t3//1P/7v/KITwP/yn+Z+f/tv/6b/49//+
3/6H//o/yYH/8j/8j//tv/uP8x//Z/7/f89x/r+/U0rjOCaRW4Lb5taBdWAd
WAfWgR2h6A7sIwAbu3Tp0qVLly4fXrZlGrvRmA6sAzta8DhIOrAOrAN7eNFP
Cuwj1PE4SDqwDqwDe3jRHVgH1oHdO3gcJB1YB9aBPbzoDqwD68CeC9hiME6y
GJm/IPKjYOfSw1m2zTxMcsBegQb6/Pnz0YBtHlyMwL5XfPr29jYMw0OAHVZj
HVgH1oF1YPi7LXn+1HWwLd98883Ly0uOmRemxchXS87/Jz/5yeezAJgGM+Ac
B3/fo+h7ZHu7ZM0vqj0/zdE2LzdnC51fKp/n8jbJLWBABfO/xQjozLWn95AM
KRe6qHZUvBHt69evh+p7IJ9Z8nhf0wHQNDlyrY7I7fX19Q5g7yho3y9fvtzS
b7uM5yHwaAhdxkXykJda8oF25NPphKX53jRGkQAYZnhgwPYQ68I9ij6mfSCd
q9y2D2Tk67fGK4vW9fcK2Eie+wzsG+hC7Q3+YuYmB/M0q6jxdPOm1BoVk+cW
CSINw5qavB7Vx1ipLApspT3Q9EATIee5oYFrt1GJFrxTp2Iwl7LGQvsUGksl
Bep0fRBgtSBHa+YwhwJ27yCW1zV8APNelkyY7w1Mx4XhA8NZ0ofkA7APHBBY
I4hmUtjQcIO3LGZ+HD4Ao02bD+RHqCwj18o6Dh9YTwDaTWMibPvCa8/OvwMf
MBPdXcu6InhjcphzDwisPXF9KD4A2saJqMEHSPAyK8i/3On9bDFYGyawDONv
7D2LbYdHGXC7LE7aRT6Qc14/G5j5EMkXq7km+D74AA0OVwM7Dh+A3aPNBzQI
Ul17ehA+AN7ybvgAZoDj84H19oF7IykGb0ze+cDBg1jisVAu8gEaB/jH+jnw
xmCbD3A2BjAlKlGk0bLMQe0kOkj1KYyoxa5OMFSU0RuxYUQTtp8h8XtxZ52D
OR9my5mBhI2l5Ee00uNRDhpbbtYJsgI8r3+WBf1jygJ3yqtGO62qt8gHmFvO
SnNm0Ww+Y5JixYs80PMBzcpMv6ZoDo01iwijrR8L7Bi1p8oHNn/1szLIkXVF
2jYf2JbQrgwWZ49Lc9uBD6yMoPuguyLpfOBd8oGxJHkaxGKBIFex/Pu3337r
IzMC/IsY3MFFRPmACjqY/v7p0ycGMzB1vct/56c+czQ6PaBYU2aiT3MwK63o
LmVAAhu9+7JKsRwXs8365CMEtQitFEtBBONRyW2doso504XPFJRj0rkLaYut
afRMFeW0yBn+Jz6hahhtATNLDmYk4+SpiKdY1tkn8QuqmX9XJYzibopWVt0y
rQkSKpDQL5HOchokmIb3JiKMQu1qMY0mGxHYvnSd1f5GgpeLBk4mpM8nUKk2
TBz0B+Rfc/zDAKcHL+kuIxAhZgPNx6gChUK0JxQlR/jy5Qvj66jEL/kp+eF4
HlbqqoraaevTUxq1Hqdpgbri38iN9NL7T9aamNg0869fv45TH9MiIPkpAecI
mG/RA02t8SMGGmuUxwKGKn9ETF8QfscvDa/INxH9PQPj78WukitinppM9Ck7
P1H5PPkICiyC9KkWPXXHuStjrZomCflAI9viWrnDmniLFNmCbvONeHrPDSY3
QbG0lb4Tq9GlVp8awpnmG8Ni1YqZm52dVso/reHU/EdZI4oRsCctViT/3nDX
jM7caiplms8ETUFciLnJLe7ddL3zKkpLRFq7Sjjvjk1T+rTReYbgFyrN1Mvs
Z7UbGI2ZnE0+JjJUlOYyim0tubZu9BPVgH+apJPQQmJyVrSmyr6aPnOt+9i0
VHj7gPZe2JQY2QxDbSZoSW07tT6WzpY0vItkEH0Mmahdjr6OxfmBdsJa72WH
RK9jTY31DNRLkdfsA3GyHCICcqb1NU3vX6g0VVf+kZ1fDXFpPvkwc69wNBYz
N7BZWeRAbo+nMPFpWjMRAb9RqSnadCoNqs2WRQMJyqLCiQRzUX5q+hiC0Co1
VjTemtZRG6YqkFWDxnwddVrjcmnmQDNdYObRWvthaDDrYCki0cVX55Bt19lQ
lzV8IMn8dlg+UFuhTL325wNcUzAEdBj6Fd+sKVvxASJUKWpsEz7QrpRJ6+Ob
FcrUy8y32g2K77lqRXvlhwof4Pysbb3GR8WPI43sO4lG1tXK84FQX7CYXN9Y
+bJqmZvImJzZZ9B7i03j54daT+DcqJH1VaaPrOtmkBed5mmND5j5BBVRYLFJ
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
Xbp06fIxBK6DmRJ8//33v/jFL9R/4P8FcEQB8w==
    "], {{0, 186}, {688, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{688, 186},
  PlotRange->{{0, 688}, {0, 186}}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztvTuONb2SLZZ6GBpEOXL/EZRXkPx27q0G5N57ILlCHQkQrpU4A/hw2m2n
/RpFHUOoEfwjKL97CJmiaiEX1o4gme+d3PVFGIWKnSRj8ZHkIhlJ/s//9f/8
T//Hf9913f/1P6U//+m//D//y1//+l/+23/+H5Pyv/63//t//6//Q/rnf/vv
uu7/TWH+//+HkJCQkJCQkJAdMo4j/lL2qMemFsACWAALYAGsBdMBLIDNqo3A
OFVtB0kAC2AB7HLTASyABbDDgTUC41S1HSQBLIAFsMtNB7AAFsAOB7YkZP8t
Hx8fszAYcieqY9VKgO5bXl9fWwOmairPVKoJ5/v7ewvAEpjNiZsWciywC9V2
kASwABbALjf9uwEbFkgaZzHgYgTJyp9//slgs4GPFZj7+vrak0ICfyCkMwTF
m7hEKUAq8Le3t7NhpIr+448/0t8sgAo8SgpTah6vIjSRajZFUYv4Jcm2NpZi
Zas7mfj161d6lM0FnhokJXkX0fDpf/6+ocUiuv+dBVLCVnmKNJdk6m6SKmgh
noQcrWVJwztc0Okl+fz8PDxltNLU5Ooh8RbwRdjzXoSE7JFZ1oGeX+lBNnB6
9PLykiab6S1g+Nl1jP1qMkFslcD11Npflxi/S7i+LpHKP43ypwJDaWNJwTxN
ppcvNZj6MnVBExByDw2P0sgiqauImMQ8ZUOi6NNUtumX1LYRDGAqJcbU8FLo
UySV/qbUlsNmlg0wjzyl7J+m5p0tMYDBo/T/QiRHqZUAKLclqQH8noWyVcCM
esZqIaoMKv8phWd/C5Xd9SFIVE0pV17wY21dUpUBbH/0ekiMEbNcQn9hp3cH
LoHOcJYM1FP7GVziDsBevsU81eF1YeIVLsGhgb+Y7nGc2hjDHMIl2Fx9a2cG
dfDybXs2I5raWthK6c1TWmHWtJEouzDI8e5orlG5LTR+4FlCt67lEuMJvQfq
ZTkw055P4hLKNhcCa0E9NXEQuW0kvB4gtf8DJ4YtcAn22Ku4BOdHOzO1RMVb
Y8aaEjBVsYoIpp3tDT6+ZQMw0wHW+8PliV/OJfDi+DLxc+HZxCtcYnS9FodR
Ne3n+8uzOdvZmuGJfbuSAZ/lbEYMBRrlndrW2rPrEqaRsDH7cZbIPXkw2VwF
bJtaD4BF/tnAd+YSqZTUForx2Ley0j6XhD+JS9R9nI611cjIOKuexyXQqu+T
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
Q/A1W2l13a1s8Pfb9l6vejVSnabOh56uKeIqX82K0SVCByH+UnlTEjCER684
625dkZ2+l2iTlQCldrLBi3JbLMraTg+ddiO+qTs5zHAQpVmleiaWiGX9VIFj
kWRno1wAxNRGB3GNa/j5scDW7nF4YLEuUTGtKtZOVwEb7rUuwcXSboEfl6pr
1yV0ZxlScQnDS6qGlgNj4ssDoz13i9cl+L9uwSy0taFmKctfDaDix1Ao/G1z
9tnmnVV9i5qdR5Ob7dlCOntdwhd4yfF7SRHdc11C3TxW4VwLbKHaCIyFKods
07veE1jWwQxvN5dJ2ZnXh/tjgTXLJVr2l6j0kKW4aITm+I4ltsZ77XGM0h8u
tDUet8fhu1NmRN8OvC8LbY334hK0tdYt4T5cQt1uPZe7A5dYuMcxTD6inFg1
+x3HttlEKakskc4C28klvPvKcpxrgS1UG4GxUPW1nO3YTwWW9Zfwc0A0UQPs
VN9LM59C2658naq5uOd3HPWPVe/MJfz7y66v0hX7p0tsjXf0vRyliu/MJUop
e1nbipYHzo4Ry7nE2v19LYq1XGIhzfZcYrP7xLaB0rPTythnChD7Hds+k3ms
dYm7cYn9n/MsB7ZQbQTGQtX38/fnEqYLRRvw1aqvHsXwkGOBmTHauD+ZbSCz
VnDq+RKmxAywa7mEd9uus318ieCfLrE13vGb0PF8LuHHsoXT+W199anfcYy3
spZLbP4mNEuzs2NEtuq3cYk7+F6ajm7JZ+Al9f5cYnY2UUnqPlyiP+JznuXA
lqjD48jX11c/nbBnDojrTvNmLCHpxMcGXl44bZJh4JjXfZ+OyN9TR5HUU7Gx
NSajxkcU7xQ9oOAc1U/nXq4FtsrhB7Z4IGcWmE+/2+RWtOHcS/bSw1RxLCX0
gXik7mSUtS6Oa9sqBhf69KIY+RTnWzIXimSDayi5xHJ5fn4mAEAlBnW2zBpa
64y3tjFo3Q3OLxS7Lfg/1awB8/b2tsqJDnlfBQ/y69cvLQqo2rdoeaZHCZga
XXtcLYREbpUAgNYCXgcNwP9f3aG724wO5/teeodh9OcbbG3OI0QnUPVgjfhb
qjRCaXaqs5Opw01vm4b4DeLDgeGf0rUXfssSITes2G+YLJQuCklvsQJLT3sR
MxGbtbXtPg58z2vWkYbbk+iQspH7eOih0/Zzlk58h+iioyFX2erX38eRKku3
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
ANaUujn68LBCnsBf4CiFQfDz81PXJTQiucR+6+ZHzO+en59ppe7/WU8N8vX1
5bMw5Lw30UNqAM1jNryq6p5XweOFI/jyxBc6vnoYxpYpGY8k/Z9skVtqYJM4
4qZmQ8BZ05U8DpM/MCo9pZDqrp67Xlxc6mWCZpBywXwpfqiVJm18L31gHfjI
Wyp4SumYiEiKJp6enl5vpZJrk3i2/D1I+F1r3D++ZZUVJmvUodBsUNFoM8wa
mtx+B92QkIeQRijNBhVvrk7YS16IvdshrU+IlqhIJOuwhykPFzmzSSG6Qe5X
OWjrzusS7DCXlMnadYnlhe9hrFqX0NXshesSZunbm67kcbzdO6gvNZjUsFZT
LxO63Iy36xJYwK/7XnrP2P5224LlM855X5gmV/e9RFLMssnjqsSz5W8WW+jk
o3HrjTnbhPjLqmbDGjmv0zs18QAWwHZGbwTGWpWDNZ+qEx2JROe8vPBj5Syg
JarhErqXWjKkrpiGSzAvxPkxHQexh0vMdsWq6nCjIwvBl7a213IJv6mxPGXP
JXzHrlyuPihoZZny3LbHwUao+1k+X6MjD8oTNLD33+u/pRPxXoizXMJzj/tw
iWyJLUy8ziVMed6ZS6D8g0s0qLaD5HcA1giMtao/q4rO9t2tM5WOGrNfJSxR
TWeujEUDKx44Hvi9VHqnEyrWW9jVlzavjQsZbFU+3DAO+f4DCuMmR68zSGWW
3cvnEvp1hgbWjxY5bvYipdJmVeoYmt3sNk9Jz+ByzyG+zkP0K1qoLLEKGdMR
X7/4WDUK8+sJqPjal0ZNUmvPqjL+k/2t78Fw625xEpfwfGmsupSs4hImsKqe
GAMYQ3pKuZZLlALjxwftYANYAFurNgJjg6q9hI7gZqKh0Tmk7jGt35f17kAD
Tzz6wvkG/e3Ha/oNmonOAZe9lv7IiIxrAqwNT9Mc9OtlglkhYb98HzvQ3S5u
e4IEqXe2/BaAxKa7XephOh/yYeZ4+9EiNx266fsC41DKiMZhj63rQz5BZTYJ
zFRuvcSYlPm2RbOpq0C+iD5WnqHNQVxxktyOjsas8r0kaecv3veSKSvsfu5L
2LVcgskia1q8+lTt+plFX+USpfAmNcBGRX/I9+mz79GsujN6mwNQAGtK3Rx9
eHDRl31J4NTDxCl2jyvkEnewldpJ3XkyPc22pYXudik6M5LS+fz8fJ8Epvvv
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
gIl4MpbNJkYrHb/SeER2pGMKmIkf7gGJbKq/XfdWVpYi+mPKaMsMiwYn+QC5
x2zdlewyKZYPAxOA7u8j11laCOFTkylUiv+YQvNrUjZ2lXJnTSts5EurElWm
1MJsJXy4o+xJXD2vRnY6d95UFpiJvo1LIP3G+7EAFsAaUTdE/xlcgnvfS4Dp
9PZxK+53ANaX99CvBVZRswHAkValZtonBl/DjbFfRiro78A1DLbCr8ZpSYpk
0s+AlHxm50eG6zLXZrjvxccDgl1Ioi2VSZbrLuQS9VW1rDoboKk21oLaDpIA
dn9gfPV+QPmkvqLu1D1+97cnfUH2iCXWOLAfwyVaUGcD1FctHqLEKlziWmDH
qu0gCWABjOpf/vIX/BMS0pTg2EYMcDsviA9ZIl3OufexBKeSwt3aHwQaEhJy
nry9vQ3fBGMIrhXAWgLGde+s19yFwJotsT3A6Flx/yW7e9oKYAGsKbUdJPuB
/e1vf2sBxn3UdpAEsAAWwC43HcACWAA7Ctjf//73FmDcR20HSQALYAHsctMB
LIAFsKOA/du//VsLMO6jtoMkgAWwAHa56QAWwALYcmD/+Mc//mmSf/7nf/7L
X/7y17/+9W9/+9vf//73f/3Xf/33f//3RCeGkJCQkJCQkJD18h//8R//8i//
kv75/wBtjV3h
    "], {{0, 344}, {708, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{708, 344},
  PlotRange->{{0, 708}, {0, 344}}]], "Input"],

Cell[CellGroupData[{

Cell["Datos", "Chapter",
 CellChangeTimes->{{3.6692943245877943`*^9, 3.6692943256042*^9}, {
  3.6693059257469797`*^9, 3.6693059263275747`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"motorData1200rpm", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.1", ",", "20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.2", ",", "40"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.3", ",", "60"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.4", ",", "79"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "93"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6", ",", "102"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.8", ",", "114"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "120"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.2", ",", "125"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.669305937844615*^9, 3.669306129115767*^9}, {
  3.669306203878881*^9, 3.669306216068776*^9}, {3.669306332225107*^9, 
  3.669306347096385*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ra", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rfw", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rfc", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "150"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rf", "=", 
   RowBox[{"Rfw", "+", "Rfc"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vf", "=", "120"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rab", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vtb", "=", "120"}], ";"}]}], "Input",
 CellChangeTimes->{{3.669306135142625*^9, 3.66930617373781*^9}, {
  3.669311928304265*^9, 3.669311940564104*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Vfmin", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"motorData1200rpm", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"motorData1200rpm", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "*", 
        RowBox[{"Rf", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "motorData1200rpm", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vfmax", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"motorData1200rpm", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"motorData1200rpm", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "*", 
        RowBox[{"Rf", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "motorData1200rpm", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.669306432972213*^9, 3.669306551603641*^9}, {
  3.669306608036145*^9, 3.669306647447526*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["F\[OAcute]rmulas", "Chapter",
 CellChangeTimes->{{3.669294327700313*^9, 3.669294335537724*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Vt", "=", 
   RowBox[{"Rf", "*", "if"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"*", " ", "Ea"}], " ", "**)"}], " ", 
  RowBox[{
   RowBox[{"Varmadura", "=", 
    RowBox[{"Vt", "+", 
     RowBox[{"ia", "*", "Ra"}]}]}], ";"}]}]}], "Input",
 CellChangeTimes->{{3.6693120248132*^9, 3.669312076158506*^9}, {
  3.6693121313936567`*^9, 3.6693122011964684`*^9}}],

Cell[CellGroupData[{

Cell["Generaci\[OAcute]n de Splines - Obtenci\[OAcute]n de la funci\[OAcute]n \
de Ea.", "Subsubsection",
 CellChangeTimes->{{3.66930702668814*^9, 3.669307034276173*^9}, {
  3.669311370701336*^9, 3.66931138449996*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "j_", "]"}], ":=", 
   RowBox[{"motorData1200rpm", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"j", "+", "1"}], ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "j_", "]"}], ":=", 
   RowBox[{"motorData1200rpm", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"j", "+", "1"}], ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", "j_", "]"}], ":=", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"j", "+", "1"}], "]"}], "-", 
    RowBox[{"x", "[", "j", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6693070644476957`*^9, 3.6693071094284487`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrix2", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "j"}], ",", 
       RowBox[{"h", "[", 
        RowBox[{"i", "-", "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"i", "\[Equal]", 
        RowBox[{"j", "-", "1"}]}], ",", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"h", "[", 
           RowBox[{"i", "-", "1"}], "]"}], "+", 
          RowBox[{"h", "[", "i", "]"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"i", "\[Equal]", 
        RowBox[{"j", "-", "2"}]}], ",", 
       RowBox[{"h", "[", "i", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"i", "\[NotEqual]", " ", "j"}], "||", 
        RowBox[{"i", "\[NotEqual]", 
         RowBox[{"j", "-", "1"}]}], "||", 
        RowBox[{"i", "\[NotEqual]", 
         RowBox[{"j", "-", "2"}]}]}], ",", "0"}], "\[IndentingNewLine]", 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{
        RowBox[{"Length", "[", "motorData1200rpm", "]"}], "-", "2"}]}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"Length", "[", "motorData1200rpm", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.669307167879344*^9, 3.669307173382215*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["3", 
        RowBox[{"h", "[", "j", "]"}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"j", "+", "1"}], "]"}], "-", 
         RowBox[{"a", "[", "j", "]"}]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["3", 
        RowBox[{"h", "[", 
         RowBox[{"j", "-", "1"}], "]"}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", "[", "j", "]"}], "-", 
         RowBox[{"a", "[", 
          RowBox[{"j", "-", "1"}], "]"}]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{
        RowBox[{"Length", "[", "motorData1200rpm", "]"}], "-", "2"}]}], 
      "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6693071988467216`*^9, 3.669307203618527*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"LinearSolve", "[", 
    RowBox[{"matrix2", ",", "res"}], "]"}]}], " ", ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"c", "[", "j_", "]"}], ":=", 
   RowBox[{
    RowBox[{"LinearSolve", "[", 
     RowBox[{"matrix2", ",", "res"}], "]"}], " ", "[", 
    RowBox[{"[", 
     RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"d", "[", "j_", "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"3", 
      RowBox[{"h", "[", "j", "]"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", "[", 
       RowBox[{"j", "+", "1"}], "]"}], "-", 
      RowBox[{"c", "[", "j", "]"}]}], ")"}]}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"b", "[", "j_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"h", "[", "j", "]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", "[", 
        RowBox[{"j", "+", "1"}], "]"}], "-", 
       RowBox[{"a", "[", "j", "]"}]}], ")"}]}], "-", 
    RowBox[{
     FractionBox[
      RowBox[{"h", "[", "j", "]"}], "3"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", 
        RowBox[{"c", "[", "j", "]"}]}], "+", 
       RowBox[{"c", "[", 
        RowBox[{"j", "+", "1"}], "]"}]}], ")"}]}]}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "i", "]"}], "+", 
      RowBox[{
       RowBox[{"b", "[", "i", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"y", "-", 
         RowBox[{"x", "[", "i", "]"}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"c", "[", "i", "]"}], "*", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", 
          RowBox[{"x", "[", "i", "]"}]}], ")"}], "2"]}], "+", 
      RowBox[{
       RowBox[{"d", "[", "i", "]"}], "*", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"y", "-", 
          RowBox[{"x", "[", "i", "]"}]}], ")"}], "3"]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x", "[", "i", "]"}], "\[LessEqual]", "y", "\[LessEqual]", 
      RowBox[{"x", "[", 
       RowBox[{"i", "+", "1"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", 
     RowBox[{
      RowBox[{"Length", "[", "motorData1200rpm", "]"}], "-", "2"}]}], "}"}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.669307274079797*^9, 3.669307274704908*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"5", "+", 
      RowBox[{"130.31316411090768`", " ", "y"}], "+", 
      RowBox[{"108.88249950239504`", " ", 
       SuperscriptBox["y", "2"]}], "+", 
      RowBox[{"879.8585938852827`", " ", 
       SuperscriptBox["y", "3"]}]}], ",", 
     RowBox[{"0", "\[LessEqual]", "y", "\[LessEqual]", "0.1`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"20", "+", 
      RowBox[{"178.4854218279452`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.1`"}], "+", "y"}], ")"}]}], "+", 
      RowBox[{"372.84007766797987`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.1`"}], "+", "y"}], ")"}], "2"]}], "-", 
      RowBox[{"1576.942959474319`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.1`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
     RowBox[{"0.1`", "\[LessEqual]", "y", "\[LessEqual]", "0.2`"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"40", "+", 
      RowBox[{"205.74514857731162`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.2`"}], "+", "y"}], ")"}]}], "-", 
      RowBox[{"100.24281017431588`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.2`"}], "+", "y"}], ")"}], "2"]}], "+", 
      RowBox[{"427.9132440119979`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.2`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
     RowBox[{"0.2`", "\[LessEqual]", "y", "\[LessEqual]", "0.3`"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"60", "+", 
      RowBox[{"198.53398386280844`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.3`"}], "+", "y"}], ")"}]}], "+", 
      RowBox[{"28.13116302928347`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.3`"}], "+", "y"}], ")"}], "2"]}], "-", 
      RowBox[{"1134.7100165736838`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.3`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
     RowBox[{"0.3`", "\[LessEqual]", "y", "\[LessEqual]", "0.4`"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"79", "+", 
      RowBox[{"170.1189159714545`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.4`"}], "+", "y"}], ")"}]}], "-", 
      RowBox[{"312.2818419428218`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.4`"}], "+", "y"}], ")"}], "2"]}], "+", 
      RowBox[{"110.92682228276887`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.4`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
     RowBox[{"0.4`", "\[LessEqual]", "y", "\[LessEqual]", "0.5`"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"93", "+", 
      RowBox[{"110.9903522513732`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.5`"}], "+", "y"}], ")"}]}], "-", 
      RowBox[{"279.00379525799116`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.5`"}], "+", "y"}], ")"}], "2"]}], "+", 
      RowBox[{"691.0027274425936`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.5`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
     RowBox[{"0.5`", "\[LessEqual]", "y", "\[LessEqual]", "0.6`"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"102", "+", 
      RowBox[{"75.91967502305275`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.6`"}], "+", "y"}], ")"}]}], "-", 
      RowBox[{"71.70297702521312`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.6`"}], "+", "y"}], ")"}], "2"]}], "-", 
      RowBox[{"39.47699045025349`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.6`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
     RowBox[{"0.6`", "\[LessEqual]", "y", "\[LessEqual]", "0.8`"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"114", "+", 
      RowBox[{"42.501245358937055`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.8`"}], "+", "y"}], ")"}]}], "-", 
      RowBox[{"95.38917129536522`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.8`"}], "+", "y"}], ")"}], "2"]}], "+", 
      RowBox[{"164.41472250339987`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.8`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
     RowBox[{"0.8`", "\[LessEqual]", "y", "\[LessEqual]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"120", "+", 
      RowBox[{"24.075343541198947`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "y"}], ")"}]}], "+", 
      RowBox[{"3.2596622066746943`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "y"}], ")"}], "2"]}], "+", 
      RowBox[{"6.818100436652966`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "y"}], ")"}], "3"]}]}], ",", 
     RowBox[{"1", "\[LessEqual]", "y", "\[LessEqual]", "1.2`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.669307275604892*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Ea", "[", "y_", "]"}], ":=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"5", "+", 
         RowBox[{"130.31316411090768`", " ", "y"}], "+", 
         RowBox[{"108.88249950239504`", " ", 
          SuperscriptBox["y", "2"]}], "+", 
         RowBox[{"879.8585938852827`", " ", 
          SuperscriptBox["y", "3"]}]}], ",", 
        RowBox[{"0", "\[LessEqual]", "y", "\[LessEqual]", "0.1`"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"20", "+", 
         RowBox[{"178.4854218279452`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.1`"}], "+", "y"}], ")"}]}], "+", 
         RowBox[{"372.84007766797987`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.1`"}], "+", "y"}], ")"}], "2"]}], "-", 
         RowBox[{"1576.942959474319`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.1`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
        RowBox[{"0.1`", "\[LessEqual]", "y", "\[LessEqual]", "0.2`"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"40", "+", 
         RowBox[{"205.74514857731162`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.2`"}], "+", "y"}], ")"}]}], "-", 
         RowBox[{"100.24281017431588`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.2`"}], "+", "y"}], ")"}], "2"]}], "+", 
         RowBox[{"427.9132440119979`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.2`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
        RowBox[{"0.2`", "\[LessEqual]", "y", "\[LessEqual]", "0.3`"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"60", "+", 
         RowBox[{"198.53398386280844`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.3`"}], "+", "y"}], ")"}]}], "+", 
         RowBox[{"28.13116302928347`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.3`"}], "+", "y"}], ")"}], "2"]}], "-", 
         RowBox[{"1134.7100165736838`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.3`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
        RowBox[{"0.3`", "\[LessEqual]", "y", "\[LessEqual]", "0.4`"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"79", "+", 
         RowBox[{"170.1189159714545`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.4`"}], "+", "y"}], ")"}]}], "-", 
         RowBox[{"312.2818419428218`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.4`"}], "+", "y"}], ")"}], "2"]}], "+", 
         RowBox[{"110.92682228276887`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.4`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
        RowBox[{"0.4`", "\[LessEqual]", "y", "\[LessEqual]", "0.5`"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"93", "+", 
         RowBox[{"110.9903522513732`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.5`"}], "+", "y"}], ")"}]}], "-", 
         RowBox[{"279.00379525799116`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.5`"}], "+", "y"}], ")"}], "2"]}], "+", 
         RowBox[{"691.0027274425936`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.5`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
        RowBox[{"0.5`", "\[LessEqual]", "y", "\[LessEqual]", "0.6`"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"102", "+", 
         RowBox[{"75.91967502305275`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.6`"}], "+", "y"}], ")"}]}], "-", 
         RowBox[{"71.70297702521312`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.6`"}], "+", "y"}], ")"}], "2"]}], "-", 
         RowBox[{"39.47699045025349`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.6`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
        RowBox[{"0.6`", "\[LessEqual]", "y", "\[LessEqual]", "0.8`"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"114", "+", 
         RowBox[{"42.501245358937055`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "0.8`"}], "+", "y"}], ")"}]}], "-", 
         RowBox[{"95.38917129536522`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.8`"}], "+", "y"}], ")"}], "2"]}], "+", 
         RowBox[{"164.41472250339987`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.8`"}], "+", "y"}], ")"}], "3"]}]}], ",", 
        RowBox[{"0.8`", "\[LessEqual]", "y", "\[LessEqual]", "1"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"120", "+", 
         RowBox[{"24.075343541198947`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "y"}], ")"}]}], "+", 
         RowBox[{"3.2596622066746943`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "y"}], ")"}], "2"]}], "+", 
         RowBox[{"6.818100436652966`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "y"}], ")"}], "3"]}]}], ",", 
        RowBox[{"1", "\[LessEqual]", "y", "\[LessEqual]", "1.2`"}]}], "}"}]}],
      "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.669307291547176*^9, 3.669307314999816*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Desarrollo", "Chapter",
 CellChangeTimes->{{3.6692943400178223`*^9, 3.669294341355032*^9}}],

Cell[CellGroupData[{

Cell["Inciso a", "Subchapter",
 CellChangeTimes->{{3.669311908967785*^9, 3.669311910359859*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"motorData1200rpm", ",", "Vfmax", ",", "Vfmin"}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Ea\>\"", ",", "\"\<If*Rfmax\>\"", ",", "\"\<If*Rfmin\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.669306187744864*^9, 3.6693061970723047`*^9}, {
  3.669306250278969*^9, 3.6693062507702627`*^9}, {3.669306353330965*^9, 
  3.669306370452887*^9}, {3.669306650971753*^9, 3.669306666012323*^9}, {
  3.669306831364868*^9, 3.669306922716305*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 5.}, {0.1, 20.}, {0.2, 40.}, {0.3, 60.}, {0.4, 79.}, {
         0.5, 93.}, {0.6, 102.}, {0.8, 114.}, {1., 120.}, {1.2, 125.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.1, 25.}, {0.2, 50.}, {0.3, 75.}, {0.4, 100.}, {
         0.5, 125.}, {0.6, 150.}, {0.8, 200.}, {1., 250.}, {1.2, 300.}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.1, 10.}, {0.2, 20.}, {0.3, 30.}, {0.4, 40.}, {
         0.5, 50.}, {0.6, 60.}, {0.8, 80.}, {1., 100.}, {1.2, 
         120.}}]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.2}, {0, 300.}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotRange -> {{0, 1.2}, {0, 300.}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Ea\"", "\"If*Rfmax\"", "\"If*Rfmin\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.669306666367896*^9, 3.6693068365234013`*^9, {3.6693068665901203`*^9, 
   3.669306886666523*^9}, 3.669306923167783*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"motorData1200rpm", ",", "Vfmax", ",", "Vfmin"}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Ea\>\"", ",", "\"\<If*Rfmax\>\"", ",", "\"\<If*Rfmin\>\""}],
      "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "30"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.669310683025803*^9, 3.669310717841132*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 5.}, {0.1, 20.}, {0.15000000000000002`, 30.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.1, 25.}, {0.12000000000000001`, 30.}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{0., 0.}, {0.1, 10.}, {0.2, 20.}, {0.3, 30.}}]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 0.1}, {0, 30}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotRange -> {{0, 0.1}, {0, 30}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Ea\"", "\"If*Rfmax\"", "\"If*Rfmin\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.669310707492033*^9, 3.669310739640348*^9}, 
   3.669310907740177*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Ea", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1.2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1.2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "300"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6693075079614553`*^9, 3.669307530034692*^9}, {
  3.66931017990823*^9, 3.669310251301817*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[{{2.4489795918367346`*^-8, 5.00000319134286}, {
      0.00036806148964963305`, 5.047978051405915}, {0.0007360984895033477, 
      5.095982671195489}, {0.001472172489210777, 5.192082242639514}, {
      0.002944320488625636, 5.384650081784329}, {0.005888616487455353, 
      5.771319495479035}, {0.011777208485114788`, 6.551264867512919}, {
      0.02355439248043366, 8.141354614351938}, {0.049090026498876733`, 
      11.763551156020469`}, {0.07293345730730756, 15.424711888506042`}, {
      0.09630917465166534, 19.346276143074558`}, {0.09961734693877551, 
      19.931756550154567`}}], 
     LineBox[{{0.12166615802382846`, 24.026074415174527`}, {
      0.14533093818597934`, 28.71016578251696}, {0.17097698437593556`, 
      33.982768972177176`}, {0.19615531710181874`, 39.207583016580294`}, {
      0.19961734693877553`, 39.921256399530286`}}], 
     LineBox[{{0.21964144661768967`, 44.00570250854025}, {
      0.24510884216136594`, 49.11622781893917}, {0.26888403449502996`, 
      53.8367685287901}, {0.29219151336462096`, 58.45126153601414}, {
      0.2996173469387755, 59.924034458401664`}}], 
     LineBox[{{0.31748025826201726`, 63.47296027516953}, {0.3410767999494013, 
      68.1239608995604}, {0.36665460766459074`, 73.02215900462036}, {
      0.3917647019157071, 77.57847477779524}, {0.3996485276415183, 
      78.94016937559223}}], 
     LineBox[{{0.41518259295681126`, 81.51125003241285}, {0.4405817500257207, 
      85.39684668691045}, {0.4642887038846179, 88.67552616924976}, {
      0.48997692377132046`, 91.85939424700253}, {0.4996173469387755, 
      92.95748834305485}}], 
     LineBox[{{0.5151974301939499, 94.62475432651807}, {0.5387257334065673, 
      96.91989658593863}, {0.5642353026469898, 99.1614281705052}, {
      0.5880526686774001, 101.08154929769991`}, {0.5996173469387754, 
      101.97093856623762`}}], 
     LineBox[{{0.6114023212437375, 102.85627968658595`}, {0.6367332398378801, 
      104.69006789915628`}, {0.6603719552220104, 106.31339154917103`}, {
      0.6859919366339462, 107.97316159142305`}, {0.7111442045818089, 
      109.49808191323604`}, {0.7346042693196594, 110.82369911175891`}, {
      0.7600456000853152, 112.15213125047877`}, {0.7837947276409587, 
      113.28637351324645`}, {0.7996173469387755, 113.98372280336594`}}], 
     LineBox[{{0.8070761417325293, 114.29602678480236`}, {0.8323388218519051, 
      115.28024275699279`}, {0.8559092987612686, 116.10677639826939`}, {
      0.8814610416984376, 116.91807983782822`}, {0.9053205814255945, 
      117.61023790476649`}, {0.9287124076886781, 118.24072824980736`}, {
      0.9540854999795672, 118.88555006658342`}, {0.977766389060444, 
      119.46452248630507`}, {0.9996173469387755, 119.99078796417258`}}], 
     LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAxETRFgsO8D+HseMFSQVeQOm9P2A9
dfA/TK4ZuUgsXkCQF1dCgdXwP08JrL7xUF5A2SV7puI98T/ru5yvCnleQKQU
SKNVn/E/Xrtn39aeXkD7fzQx3v7xP0Y9oM5ExF5A9J8tQYRm8j/qOBQfVu1e
QG+gz+k7x/I/h9FA7R8UX0AG49rG68jyP5WjBTTOFF9AnCXmo5vK8j8PtH6E
fBVfQMqq/F37zfI/n9aZQtkWX0AmtSnSutTyP5kOyjOTGV9A3cmDujni8j9l
rcHsCB9fQEvzN4s3/fI/ocGIzvspX0DiNUNo5/7yPx50x1GrKl9AeHhORZcA
8z/LlxzfWitfQKb9ZP/2A/M/FnkWGLosX0ACCJJztgrzP86PngN5L19AuRzs
WzUY8z8tca/D+DRfQFBf9zjlGfM/KXXF6ag1X0DmoQIWlRvzP7gDIxpZNl9A
FCcZ0PQe8z/tBsGZuTdfQHAxRkS0JfM/HpLeFHs6X0AHdFEhZCfzPyrXho0r
O19AnrZc/hMp8z98M48Q3DtfQMw7c7hzLPM/SnjMNT09X0Bjfn6VIy7zP/OD
B9jtPV9A+sCJctMv8z877a6Enj5fQJADlU+DMfM/t8XFO08/X0AnRqAsMzPz
P/8eT/3/P19AjoTjVw==
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2}, {0, 300}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.669307530555307*^9, {3.6693101805828876`*^9, 3.669310184476383*^9}, 
   3.6693102520930243`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
\
\>"]]
}, Open  ]],

Cell["\<\
Igualamos la funci\[OAcute]n de Ea con las dos condiciones de Rf para obtener \
los valores de If.\
\>", "Text",
 CellChangeTimes->{{3.669311092504602*^9, 3.6693111287811527`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Ea", "[", "y", "]"}], "-", 
      RowBox[{"y", "*", 
       RowBox[{"Rf", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "\[Equal]", "0"}], ",", "y"}], 
   "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"*", " ", "Rf", " ", "min"}], " ", 
   "**)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Ea", "[", "y", "]"}], "-", 
      RowBox[{"y", "*", 
       RowBox[{"Rf", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "\[Equal]", "0"}], ",", "y"}], 
   "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"*", " ", "Rf", " ", "max"}], " ", "**)"}]}]}], "Input",
 CellChangeTimes->{{3.669307402563225*^9, 3.669307429012137*^9}, {
  3.6693074605134687`*^9, 3.669307476378694*^9}, {3.6693102823432503`*^9, 
  3.669310325230619*^9}, {3.669310641822228*^9, 3.6693106450892487`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.6693074298295116`*^9, {3.6693074622480497`*^9, 3.669307476822905*^9}, 
   3.6693102857995663`*^9, {3.6693106427636623`*^9, 3.669310645484522*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", "0.04418604139618782`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6693074298295116`*^9, {3.6693074622480497`*^9, 3.669307476822905*^9}, 
   3.6693102857995663`*^9, {3.6693106427636623`*^9, 3.669310645558917*^9}}]
}, Open  ]],

Cell["\<\
Obersvamos que para Rf m\[IAcute]nima, el valor est\[AAcute] fuera del rango \
existente. De la gr\[AAcute]fica asumimos un valor arbitrario de 1.25 \
\[OAcute] 1.26 para If max.\
\>", "Text",
 CellChangeTimes->{{3.669309934025956*^9, 3.6693099395522327`*^9}, {
  3.6693100430287523`*^9, 3.669310063070696*^9}, {3.669310113215743*^9, 
  3.6693101206233273`*^9}, {3.66931034926441*^9, 3.669310358353272*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"if", "=", 
   RowBox[{"{", 
    RowBox[{"1.26", ",", "0.04418604139618782`"}], "}"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"*", " ", "if", " ", "max"}], ",", " ", 
    RowBox[{"if", " ", "min"}]}], "**)"}]}]], "Input",
 CellChangeTimes->{{3.669310130886862*^9, 3.669310154305841*^9}, {
  3.6693103653087387`*^9, 3.669310383682577*^9}, {3.6693108412920647`*^9, 
  3.66931085392645*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Inciso b", "Subchapter",
 CellChangeTimes->{{3.66931191791429*^9, 3.669311919251275*^9}}],

Cell["\<\
Dado que no hay reacci\[OAcute]n de la armadura, Ra =0. Por lo tanto Vt = Ea. \
Obtenemos If.\
\>", "Text",
 CellChangeTimes->{{3.669311968681119*^9, 3.669311990691765*^9}, {
  3.669312235451446*^9, 3.669312239541944*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Ea", "[", "y", "]"}], "\[Equal]", "120"}], ",", "y"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.669312219622096*^9, 3.669312229158216*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", "0.9999999999999987`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.669312229507002*^9}]
}, Open  ]],

Cell["Como Vt = If * (Rfw + Rfc), despejamos para Rfc", "Text",
 CellChangeTimes->{{3.669312261120049*^9, 3.669312281899209*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{"Vtb", "\[Equal]", 
     RowBox[{"ifb", "*", 
      RowBox[{"(", 
       RowBox[{"Rfw", "+", "Rfcb"}], ")"}]}]}], ",", "Rfcb"}], "]"}], "/.", 
  RowBox[{"ifb", "\[Rule]", "1"}]}]], "Input",
 CellChangeTimes->{{3.669312290426299*^9, 3.6693123284572353`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"Rfcb", "\[Rule]", "20.`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.669312329155048*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resultados", "Chapter",
 CellChangeTimes->{{3.6692943462993393`*^9, 3.669294347556571*^9}, 
   3.669306394072111*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
YsMkSqK6updESdToaoeS/x/RVEZQ
    "], {{0, 483}, {691, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{691, 483},
  PlotRange->{{0, 691}, {0, 483}}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
McEYwCVjGImMAY4KWffnFcf/3H2G9rKtGAIQDioG6VG/lPYuqkh+GKYs4G/o
gc3BAxr8luaXvcOMi88s3jsb4KFD408nGSA8Ch6jGFj5VXruaK4vByZa4hb0
ezEENPhY0dtASBjnPy7+vj7krLlt3EqPgV6uUe0eZeiupE1LzoJHvK+XTpzy
ZRxMxOugHuOT0zi7y5LraXi91XcrOsV9+hHKAVfFX3lE9GxHX5dk0TzIL4E/
YcFw+WjBaBK5isSf0F5xUEGTTlseGfwMe8vpl3hSgpGW2q8QO4xRzdUicqDz
Q0xacpm0p1sO5mymT8jUzrv5uzJgKLcDHyLypgN6wUS6Pr3CXCbkR2M1+x/2
zcf2epBdVkqrpT3ikc3LvQaEej0JSZ+H39L2csoR9wLu98PwVjvj//POkvuX
Nw5NvbRnzDP/ZBDXqPux9HD6HyRV8VceEa7yaFDr+XJN9ZSveJvao5D5Cr4/
0h5yblBe4vB/SvUrsc+3g9CiHoYtFcFDhzP54plwsNEagw/sP50NzVkXyKa/
IUz4FV9S+CSSF5O8szqqlzfomcaHYTGCd4ocVPNB0gqkOW0bL10y6K4BET3X
WHFL6p1uNMjx9KkOow2QiSN6Hb0gb990Qs6XIMl4b13e4fQ/SKrirzwi2pmp
xi8vL8Fr1GFYxNQG9jCk/RRkPW/AlzX6qwHOVI8A10uu8+1j5ajNRO8ElPD7
wDnh3CMT3+0ulXb7GT/NB0krkFa09cRjbS9dilysp32+vGOKuxU35iIRbgRx
2qeQcReQFfV8a+bdIXqZaA0aL6Vt1jgb5OTSpdAd0tHgU23g5zOkHC+S0ODR
ZsXRpb3I1oBd/doQMpm5HkrvPF0vvAu0JqbKLSQyyVOk3z7F8rmzqHE/IPY9
Hi6R4fOJpuPwnquRjVVpFwFx2nn63e/bImr0yCXFlSDnyxto4O2voQ1iQbQP
5yeD9rxZ5J76IIOkKn7zYb+VHvlOGi96xo1ZPoZvproUexPaRUCcdp6+tkkf
XfpfCnK+xCFzU8ZhiNrl0C1LG+DxfiWuiso98kEGSVX85sN+Kz1KMtI161B+
ti1BmtOubdK5DWQ03iwdhOuY+/3+rNZGnwfZ1tneSo+18f1CJOoPl4kXsx77
AXHaefqqJp2vjVNRIokg3P3BsCiGnWQXKmp+trfSY238+cbpG8fSeywC0uRC
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
iNO2BHHaliBO2xLEpseTi4uLi8t7kf8HQ5U9DA==
    "], {{0, 240}, {497, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{497, 240},
  PlotRange->{{0, 497}, {0, 240}}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
/AeXJaqB
    "], {{0, 24}, {404, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{404, 24},
  PlotRange->{{0, 404}, {0, 24}}]], "Input",
 CellChangeTimes->{{3.66930423125454*^9, 3.6693042322759333`*^9}}],

Cell["\<\
Observamos una diferencia entre el resultado del libro y el resultado \
obtenido para el inciso a. Esto se debe a que la respuesta del solucionario \
se obtiene con m\[EAcute]todos inexactos, aproximando solamente valores en \
una gr\[AAcute]fica dibujada a mano. En este caso se obtuvo una \
funci\[OAcute]n aproximada para Ea en base a los puntos dados. Con ello se \
resolvi\[OAcute] la igualdad para cada situaci\[OAcute]n de Rf.\
\>", "Text",
 CellChangeTimes->{{3.669311133917783*^9, 3.669311226365361*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", "\[IndentingNewLine]", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<a)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\"\<Vt max\>\"", ",", 
      RowBox[{
       RowBox[{"if", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "*", 
       RowBox[{"Rf", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\"\<Vt min\>\"", ",", 
      RowBox[{
       RowBox[{"if", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "*", 
       RowBox[{"Rf", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\"\<b)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\"\<Rfc\>\"", ",", 
      RowBox[{
       RowBox[{"NSolve", "[", 
        RowBox[{
         RowBox[{"Vtb", "\[Equal]", 
          RowBox[{"ifb", "*", 
           RowBox[{"(", 
            RowBox[{"Rfw", "+", "Rfcb"}], ")"}]}]}], ",", "Rfcb"}], "]"}], "/.", 
       RowBox[{"ifb", "\[Rule]", "1"}]}]}], "}"}]}], "\[IndentingNewLine]", 
   "}"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.669311447228899*^9, 3.6693116035311003`*^9}, {
  3.66931234264258*^9, 3.669312357832161*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"a)\"\>", "\<\"\"\>"},
    {"\<\"Vt max\"\>", "126.`"},
    {"\<\"Vt min\"\>", "11.046510349046955`"},
    {"\<\"b)\"\>", "\<\"\"\>"},
    {"\<\"Rfc\"\>", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Rfcb", "\[Rule]", "20.`"}], "}"}], "}"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.66931153549216*^9, 3.669311591269022*^9}, 
   3.669312360153379*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{681, 709},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"10.3 for Linux x86 (64-bit) (December 10, 2015)",
StyleDefinitions->"ReverseColor.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 144, 2, 102, "Title"],
Cell[727, 26, 107, 1, 57, "Subtitle"],
Cell[837, 29, 33198, 549, 186, "Input"],
Cell[34038, 580, 32673, 541, 150, "Input"],
Cell[66714, 1123, 40082, 662, 258, "Input"],
Cell[CellGroupData[{
Cell[106821, 1789, 143, 2, 73, "Chapter"],
Cell[106967, 1793, 934, 27, 77, "Input"],
Cell[107904, 1822, 729, 21, 187, "Input"],
Cell[108636, 1845, 1398, 42, 187, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110071, 1892, 101, 1, 73, "Chapter"],
Cell[110175, 1895, 423, 12, 55, "Input"],
Cell[CellGroupData[{
Cell[110623, 1911, 218, 3, 40, "Subsubsection"],
Cell[110844, 1916, 728, 24, 77, "Input"],
Cell[111575, 1942, 1436, 37, 209, "Input"],
Cell[113014, 1981, 948, 29, 161, "Input"],
Cell[113965, 2012, 146, 4, 32, "Input"],
Cell[114114, 2018, 257, 8, 32, "Input"],
Cell[114374, 2028, 336, 12, 65, "Input"],
Cell[114713, 2042, 594, 21, 66, "Input"],
Cell[CellGroupData[{
Cell[115332, 2067, 1163, 35, 119, "Input"],
Cell[116498, 2104, 5447, 163, 341, "Output"]
}, Open  ]],
Cell[121960, 2270, 6085, 169, 713, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128094, 2445, 97, 1, 73, "Chapter"],
Cell[CellGroupData[{
Cell[128216, 2450, 96, 1, 68, "Subchapter"],
Cell[CellGroupData[{
Cell[128337, 2455, 623, 13, 55, "Input"],
Cell[128963, 2470, 15164, 310, 275, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144164, 2785, 638, 17, 77, "Input"],
Cell[144805, 2804, 14750, 300, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159592, 3109, 500, 14, 32, "Input"],
Cell[160095, 3125, 9516, 163, 238, 4275, 75, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[169626, 3291, 190, 4, 51, "Text"],
Cell[CellGroupData[{
Cell[169841, 3299, 939, 28, 77, "Input"],
Cell[170783, 3329, 216, 4, 32, "Output"],
Cell[171002, 3335, 293, 6, 32, "Output"]
}, Open  ]],
Cell[171310, 3344, 417, 7, 51, "Text"],
Cell[171730, 3353, 437, 11, 55, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172204, 3369, 95, 1, 68, "Subchapter"],
Cell[172302, 3372, 232, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[172559, 3381, 215, 6, 32, "Input"],
Cell[172777, 3389, 163, 4, 32, "Output"]
}, Open  ]],
Cell[172955, 3396, 129, 1, 31, "Text"],
Cell[CellGroupData[{
Cell[173109, 3401, 331, 9, 32, "Input"],
Cell[173443, 3412, 151, 4, 89, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[173655, 3423, 123, 2, 73, "Chapter"],
Cell[173781, 3427, 45039, 743, 360, "Input"],
Cell[218823, 4172, 20900, 348, 254, "Input"],
Cell[239726, 4522, 3603, 64, 39, "Input"],
Cell[243332, 4588, 523, 8, 131, "Text"],
Cell[CellGroupData[{
Cell[243880, 4600, 1353, 36, 209, "Input"],
Cell[245236, 4638, 510, 15, 99, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
